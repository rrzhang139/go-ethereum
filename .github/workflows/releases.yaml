name: Build and Publish Release Binaries

on:
  release:
    types: [created]

jobs:
  release-linux-amd64:
    runs-on: ubuntu-latest
    env:
      goos: linux
      goarch: amd64
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "1.18.x"

    - name: Install zip
      run: sudo apt-get install zip

    - name: Build geth binary and create archives
      env:
        GOOS: ${{ env.goos }}
        GOARCH: ${{ env.goarch }}
      run: |
        env GO111MODULE=on go run build/ci.go install ./cmd/geth -arch $GOARCH
        binary_name="l2geth-${GOOS}-${GOARCH}"
        mv build/bin/geth "build/bin/${binary_name}"
        zip -j "build/bin/${binary_name}.zip" "build/bin/${binary_name}"

    - name: Create and upload release assets
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          build/bin/l2geth-${{ env.goos }}-${{ env.goarch }}
          build/bin/l2geth-${{ env.goos }}-${{ env.goarch }}.zip

  release-linux-arm:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    env:
      goos: linux
      goarch: arm 
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "1.18.x"

    - name: Install zip
      run: sudo apt-get install zip

    - name: Build geth binary and create archives
      env:
        GOOS: ${{ env.goos }}
        GOARCH: ${{ env.goarch }}
      run: |
        env GO111MODULE=on go run build/ci.go install ./cmd/geth -arch $GOARCH
        binary_name="l2geth-${GOOS}-${GOARCH}"
        mv build/bin/geth "build/bin/${binary_name}"
        zip -j "build/bin/${binary_name}.zip" "build/bin/${binary_name}"

    - name: Create and upload release assets
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          build/bin/l2geth-${{ env.goos }}-${{ env.goarch }}
          build/bin/l2geth-${{ env.goos }}-${{ env.goarch }}.zip